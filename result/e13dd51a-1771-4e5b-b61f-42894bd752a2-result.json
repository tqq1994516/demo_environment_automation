{"name": "test_claim_demo", "status": "broken", "statusDetails": {"message": "TypeError: str_split() missing 1 required positional argument: 's'", "trace": "self = <test_main.TestClass object at 0x7fad5495ba60>\n\n    @allure.story(load_dict[4]['name'])\n    def test_claim_demo(self):\n        username = 'n=>form[user_name]'\n        pwd = 'n=>form[user_pwd]'\n        btn = 'c=>login-btn'\n        assert_element = 'x=>/html/body/div[2]/div/ul/li[1]/a'\n>       self.verify(4, username, pwd, btn, assert_element)\n\ntest_main.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_main.TestClass object at 0x7fad5495ba60>, index = 4, username = 'n=>form[user_name]', pwd = 'n=>form[user_pwd]', btn = 'c=>login-btn', ass_el = 'x=>/html/body/div[2]/div/ul/li[1]/a'\n\n    def verify(self, index, username, pwd, btn, ass_el):\n        username_type, username_value = self.str_split(username)\n        pwd_type, pwd_value = self.str_split(pwd)\n        btn_type, btn_value = self.str_split(btn)\n        username_text = load_dict[index]['account']\n        pwd_text = load_dict[index]['pwd']\n        assert_element = ass_el\n>       assert_element_type, assert_element_value = TestClass.str_split(assert_element)\nE       TypeError: str_split() missing 1 required positional argument: 's'\n\ntest_main.py:38: TypeError"}, "start": 1621221659293, "stop": 1621221659293, "uuid": "3ab0cdba-3cd5-4eb7-9c08-435e49012c38", "historyId": "91e0f915290a3c9a35d38838be70f426", "testCaseId": "66d3eb2fe14590c6fe1504a0078afad2", "fullName": "test_main.TestClass#test_claim_demo", "labels": [{"name": "feature", "value": "验证演示环境各链接是否活跃"}, {"name": "story", "value": "认领平台demo"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "TestClass"}, {"name": "host", "value": "AliYun"}, {"name": "thread", "value": "31635-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}