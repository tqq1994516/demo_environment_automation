{
  "uid" : "11258bb8b4eed911",
  "name" : "test_Academic_libraries_demo",
  "fullName" : "test_main.TestClass#test_Academic_libraries_demo",
  "historyId" : "854eda620d61100b32fa215388ab7065",
  "time" : {
    "start" : 1621177460370,
    "stop" : 1621177464033,
    "duration" : 3663
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: 用户名或密码错误！\nMessage: unexpected alert open: {Alert text : 用户名或密码错误！}\n  (Session info: headless chrome=90.0.4430.212)",
  "statusTrace" : "self = <test_main.TestClass object at 0x7fb7a676c100>\n\n    @allure.story(load_dict[5]['name'])\n    def test_Academic_libraries_demo(self):\n        username = 'i=>username1'\n        username_type, username_value = self.str_split(username)\n        username_text = load_dict[5]['account']\n        pwd = 'i=>passwd1'\n        pwd_type, pwd_value = self.str_split(pwd)\n        pwd_text = load_dict[5]['pwd']\n        btn = 'i=>sub_1'\n        btn_type, btn_value = self.str_split(btn)\n        browser = BrowserEngine()\n        browser.open_browser(load_dict[5]['url'])\n        driver = BasePage(browser.driver)\n        login_a = 'c=>sign-in'\n        login_a_type, login_a_value = self.str_split(login_a)\n        wait_element(browser.driver, 30, 1, login_a_type, login_a_value)\n        driver.click(login_a)\n        pwd_login_a = 's=>[href=\"#password\"]'\n        pwd_login_a_type, pwd_login_a_value = self.str_split(pwd_login_a)\n        wait_element(browser.driver, 20, 1, pwd_login_a_type, pwd_login_a_value)\n        driver.es(\"arguments[0].click()\", pwd_login_a)\n        wait_element(browser.driver, 20, 1, username_type, username_value)\n        driver.es(\"arguments[0].value=\" + username_text, username)\n        wait_element(browser.driver, 20, 1, pwd_type, pwd_value)\n        driver.enter(pwd, pwd_value)\n        #driver.es(\"arguments[0].value=\" + pwd_text, pwd)\n        wait_element(browser.driver, 20, 1, btn_type, btn_value)\n        driver.es(\"arguments[0].click()\", btn)\n        driver.wait(2)\n>       driver.back()\n\ntest_main.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nframework/base_page.py:55: in back\n    self.driver.back()\n/root/anaconda3/envs/demo_env_autotest/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:813: in back\n    self.execute(Command.GO_BACK)\n/root/anaconda3/envs/demo_env_autotest/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb7a676c3a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"用户名或密码错误！\"},\"error\":\"unexpected alert open\",\"message\":\"unexpected ...: 用户名或密码错误！}\\\\n  (Session info: headless chrome=90.0.4430.212)\",\"stacktrace\":\"#0 0x55c2ec96de89 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: 用户名或密码错误！\nE           Message: unexpected alert open: {Alert text : 用户名或密码错误！}\nE             (Session info: headless chrome=90.0.4430.212)\n\n/root/anaconda3/envs/demo_env_autotest/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:241: UnexpectedAlertPresentException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: 用户名或密码错误！\nMessage: unexpected alert open: {Alert text : 用户名或密码错误！}\n  (Session info: headless chrome=90.0.4430.212)",
    "statusTrace" : "self = <test_main.TestClass object at 0x7fb7a676c100>\n\n    @allure.story(load_dict[5]['name'])\n    def test_Academic_libraries_demo(self):\n        username = 'i=>username1'\n        username_type, username_value = self.str_split(username)\n        username_text = load_dict[5]['account']\n        pwd = 'i=>passwd1'\n        pwd_type, pwd_value = self.str_split(pwd)\n        pwd_text = load_dict[5]['pwd']\n        btn = 'i=>sub_1'\n        btn_type, btn_value = self.str_split(btn)\n        browser = BrowserEngine()\n        browser.open_browser(load_dict[5]['url'])\n        driver = BasePage(browser.driver)\n        login_a = 'c=>sign-in'\n        login_a_type, login_a_value = self.str_split(login_a)\n        wait_element(browser.driver, 30, 1, login_a_type, login_a_value)\n        driver.click(login_a)\n        pwd_login_a = 's=>[href=\"#password\"]'\n        pwd_login_a_type, pwd_login_a_value = self.str_split(pwd_login_a)\n        wait_element(browser.driver, 20, 1, pwd_login_a_type, pwd_login_a_value)\n        driver.es(\"arguments[0].click()\", pwd_login_a)\n        wait_element(browser.driver, 20, 1, username_type, username_value)\n        driver.es(\"arguments[0].value=\" + username_text, username)\n        wait_element(browser.driver, 20, 1, pwd_type, pwd_value)\n        driver.enter(pwd, pwd_value)\n        #driver.es(\"arguments[0].value=\" + pwd_text, pwd)\n        wait_element(browser.driver, 20, 1, btn_type, btn_value)\n        driver.es(\"arguments[0].click()\", btn)\n        driver.wait(2)\n>       driver.back()\n\ntest_main.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nframework/base_page.py:55: in back\n    self.driver.back()\n/root/anaconda3/envs/demo_env_autotest/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:813: in back\n    self.execute(Command.GO_BACK)\n/root/anaconda3/envs/demo_env_autotest/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb7a676c3a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"用户名或密码错误！\"},\"error\":\"unexpected alert open\",\"message\":\"unexpected ...: 用户名或密码错误！}\\\\n  (Session info: headless chrome=90.0.4430.212)\",\"stacktrace\":\"#0 0x55c2ec96de89 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: 用户名或密码错误！\nE           Message: unexpected alert open: {Alert text : 用户名或密码错误！}\nE             (Session info: headless chrome=90.0.4430.212)\n\n/root/anaconda3/envs/demo_env_autotest/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:241: UnexpectedAlertPresentException",
    "steps" : [ {
      "name" : "打开浏览器",
      "time" : {
        "start" : 1621177461486,
        "stop" : 1621177463609,
        "duration" : 2123
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "2797b59e9102e2c6",
        "name" : "操作信息",
        "source" : "2797b59e9102e2c6.attach",
        "type" : "text/plain",
        "size" : 157
      } ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'http://xsdc2.casdc.com/widgets/Encyclopedia_PC'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "等待元素",
      "time" : {
        "start" : 1621177463609,
        "stop" : 1621177463618,
        "duration" : 9
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "eace735b102dd9a0",
        "name" : "操作信息",
        "source" : "eace735b102dd9a0.attach",
        "type" : "text/plain",
        "size" : 73
      } ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"48dd712d20394f3321933a55ba705160\")>"
      }, {
        "name" : "wait_time",
        "value" : "30"
      }, {
        "name" : "step",
        "value" : "1"
      }, {
        "name" : "selector_tpye",
        "value" : "'c'"
      }, {
        "name" : "selector",
        "value" : "'sign-in'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "点击元素",
      "time" : {
        "start" : 1621177463618,
        "stop" : 1621177463810,
        "duration" : 192
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5844ada36a84093",
        "name" : "操作信息",
        "source" : "5844ada36a84093.attach",
        "type" : "text/plain",
        "size" : 33
      } ],
      "parameters" : [ {
        "name" : "selector",
        "value" : "'c=>sign-in'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "等待元素",
      "time" : {
        "start" : 1621177463810,
        "stop" : 1621177463818,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "56b63413440c0ec7",
        "name" : "操作信息",
        "source" : "56b63413440c0ec7.attach",
        "type" : "text/plain",
        "size" : 84
      } ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"48dd712d20394f3321933a55ba705160\")>"
      }, {
        "name" : "wait_time",
        "value" : "20"
      }, {
        "name" : "step",
        "value" : "1"
      }, {
        "name" : "selector_tpye",
        "value" : "'s'"
      }, {
        "name" : "selector",
        "value" : "'[href=\"#password\"]'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "调用js操作",
      "time" : {
        "start" : 1621177463818,
        "stop" : 1621177463844,
        "duration" : 26
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "89c61e69300f10eb",
        "name" : "操作信息",
        "source" : "89c61e69300f10eb.attach",
        "type" : "text/plain",
        "size" : 44
      } ],
      "parameters" : [ {
        "name" : "js",
        "value" : "'arguments[0].click()'"
      }, {
        "name" : "selector",
        "value" : "'s=>[href=\"#password\"]'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "等待元素",
      "time" : {
        "start" : 1621177463844,
        "stop" : 1621177463852,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "621f59362096ba51",
        "name" : "操作信息",
        "source" : "621f59362096ba51.attach",
        "type" : "text/plain",
        "size" : 75
      } ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"48dd712d20394f3321933a55ba705160\")>"
      }, {
        "name" : "wait_time",
        "value" : "20"
      }, {
        "name" : "step",
        "value" : "1"
      }, {
        "name" : "selector_tpye",
        "value" : "'i'"
      }, {
        "name" : "selector",
        "value" : "'username1'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "调用js操作",
      "time" : {
        "start" : 1621177463852,
        "stop" : 1621177463869,
        "duration" : 17
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6f7870907fbb0abf",
        "name" : "操作信息",
        "source" : "6f7870907fbb0abf.attach",
        "type" : "text/plain",
        "size" : 35
      } ],
      "parameters" : [ {
        "name" : "js",
        "value" : "'arguments[0].value=0908717'"
      }, {
        "name" : "selector",
        "value" : "'i=>username1'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "等待元素",
      "time" : {
        "start" : 1621177463869,
        "stop" : 1621177463877,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "172c7a260e46242d",
        "name" : "操作信息",
        "source" : "172c7a260e46242d.attach",
        "type" : "text/plain",
        "size" : 73
      } ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"48dd712d20394f3321933a55ba705160\")>"
      }, {
        "name" : "wait_time",
        "value" : "20"
      }, {
        "name" : "step",
        "value" : "1"
      }, {
        "name" : "selector_tpye",
        "value" : "'i'"
      }, {
        "name" : "selector",
        "value" : "'passwd1'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "输入信息",
      "time" : {
        "start" : 1621177463877,
        "stop" : 1621177463925,
        "duration" : 48
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9ce29751c5e8da2e",
        "name" : "操作信息",
        "source" : "9ce29751c5e8da2e.attach",
        "type" : "text/plain",
        "size" : 52
      } ],
      "parameters" : [ {
        "name" : "selector",
        "value" : "'i=>passwd1'"
      }, {
        "name" : "text",
        "value" : "'passwd1'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "等待元素",
      "time" : {
        "start" : 1621177463925,
        "stop" : 1621177463933,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "92cca90e114602",
        "name" : "操作信息",
        "source" : "92cca90e114602.attach",
        "type" : "text/plain",
        "size" : 71
      } ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"48dd712d20394f3321933a55ba705160\")>"
      }, {
        "name" : "wait_time",
        "value" : "20"
      }, {
        "name" : "step",
        "value" : "1"
      }, {
        "name" : "selector_tpye",
        "value" : "'i'"
      }, {
        "name" : "selector",
        "value" : "'sub_1'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "调用js操作",
      "time" : {
        "start" : 1621177463933,
        "stop" : 1621177464031,
        "duration" : 98
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "dbe54b4719bc7341",
        "name" : "操作信息",
        "source" : "dbe54b4719bc7341.attach",
        "type" : "text/plain",
        "size" : 31
      } ],
      "parameters" : [ {
        "name" : "js",
        "value" : "'arguments[0].click()'"
      }, {
        "name" : "selector",
        "value" : "'i=>sub_1'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "6dd7542020f754b3",
      "name" : "log",
      "source" : "6dd7542020f754b3.txt",
      "type" : "text/plain",
      "size" : 1503
    }, {
      "uid" : "87c05d7caffc72f6",
      "name" : "stderr",
      "source" : "87c05d7caffc72f6.txt",
      "type" : "text/plain",
      "size" : 1634
    } ],
    "parameters" : [ ],
    "stepsCount" : 11,
    "attachmentsCount" : 13,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "学术典藏demo"
  }, {
    "name" : "feature",
    "value" : "验证演示环境各链接是否活跃"
  }, {
    "name" : "suite",
    "value" : "test_main"
  }, {
    "name" : "subSuite",
    "value" : "TestClass"
  }, {
    "name" : "host",
    "value" : "AliYun"
  }, {
    "name" : "thread",
    "value" : "22119-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_main"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "11258bb8b4eed911.json",
  "parameterValues" : [ ]
}